
Gurobi 8.1.0 (win64, Python) logging started 12/07/18 19:19:00

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 19:19:17

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 19:38:51

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 19:39:09

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 19:40:23

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 19:45:10

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 19:49:49

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 19:56:06

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.01s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.02 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 19:57:09

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 19:57:27

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 19:57:42

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 19:58:22

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 19:59:23

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:00:05

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:00:21

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:02:02

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:02:45

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:02:49

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:02:54

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:03:13

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:03:23

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:03:37

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:03:59

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:04:08

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:04:21

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:05:42

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:07:55

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.02s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.02 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:08:08

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:08:48

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:08:52

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:09:31

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:10:53

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:11:03

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:11:29

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:11:42

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:12:35

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:13:24

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:13:47

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:13:59

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:19:37

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:19:40

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:24:12

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:24:27

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:25:09

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:28:09

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:28:42

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:28:45

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:31:07

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:37:56

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.02s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.02 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:39:12

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:39:31

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:40:07

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.02s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.02 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:40:19

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:40:31

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:40:44

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:49:46

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:51:38

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:51:43

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:53:11

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:53:19

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:53:34

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:58:49

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 20:59:10

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 21:00:01

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 21:00:12

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 21:00:26

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 21:00:35

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 21:00:41

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 21:01:03

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 21:01:26

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 21:01:39

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 21:02:05

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 21:02:50

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 442.1800000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 216.02 442.18 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.160200000000e+02, best bound 2.160200000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 21:02:59

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 447.5700000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 226.2 447.57 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.262000000000e+02, best bound 2.262000000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 21:03:13

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 408.5000000
Presolve removed 39 rows and 108 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 236.85 408.5 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.368500000000e+02, best bound 2.368500000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 21:03:32

Academic license - for non-commercial use only
Optimize a model with 41 rows, 180 columns and 355 nonzeros
Variable types: 0 continuous, 180 integer (180 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 3e+05]
Found heuristic solution: objective 339.1500000
Presolve removed 41 rows and 180 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 203.03 339.15 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.030300000000e+02, best bound 2.030300000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 22:42:39

Academic license - for non-commercial use only
Optimize a model with 39 rows, 108 columns and 213 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 3e+01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 413.6200000
Presolve removed 39 rows and 108 columns
Presolve time: 0.01s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.02 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 223.26 413.62 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.232600000000e+02, best bound 2.232600000000e+02, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 22:48:26

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 22:48:43

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 22:51:02

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 22:55:00

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 22:55:32

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/07/18 23:59:06

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:00:08

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:00:39

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:00:47

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:01:16

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:03:49

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:04:02

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:06:38

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:06:50

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:07:02

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:07:14

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:07:25

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:07:33

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:12:46

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:12:57

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:13:34

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:14:26

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:15:57

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:17:24

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:17:35

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:17:50

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 00:41:40

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 01:27:35

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 01:27:52

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 01:46:15

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 01:46:32

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 01:46:55

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 01:47:19

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 01:49:51

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 01:50:00

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 01:51:54

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 01:52:22

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 01:52:33

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 01:54:50

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 01:59:24

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 02:01:43

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 02:01:52

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 02:02:15

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 02:06:56

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:17:51

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:18:18

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:18:57

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:20:51

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:22:25

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:23:16

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:23:41

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:24:17

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:24:27

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:24:41

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:24:48

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:25:04

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:26:16

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:27:38

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:28:07

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:28:38

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:29:03

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:29:10

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:29:30

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:31:40

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:32:02

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:33:02

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:36:28

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:37:02

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:39:51

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:40:41

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:42:30

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:43:57

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:44:58

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:45:55

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:46:24

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:46:51

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:47:15

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:48:09

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:48:30

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:56:02

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:56:34

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 11:57:11

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:00:20

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:02:03

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:03:05

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:03:51

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:04:23

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:04:44

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:06:27

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:06:51

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:08:41

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:11:43

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:12:45

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:15:21

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:16:00

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:16:16

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:16:24

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:21:38

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:22:20

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:22:30

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:22:46

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:23:06

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:23:48

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:24:22

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:27:17

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:47:48

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:47:56

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:48:16

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:48:45

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:48:50

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:49:00

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:49:04

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:49:49

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:50:15

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:50:37

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:50:43

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:51:02

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:53:42

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:53:47

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:53:57

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:54:05

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:54:13

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:54:28

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:54:36

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:54:41

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 12:54:45

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:02:39

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:03:03

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:04:25

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:06:17

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:08:01

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:10:12

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:23:35

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:24:29

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:24:41

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:24:52

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:31:07

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:32:28

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:32:43

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:32:53

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:33:54

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:34:25

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:34:40

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:34:52

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:35:37

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 13:35:47

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 14:10:48

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 14:11:15

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 14:11:39

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 14:23:40

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 14:24:12

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 14:24:21

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 14:43:51

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 14:44:18

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 14:49:56

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 14:50:24

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 14:56:38

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 14:56:59

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 15:01:17

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 15:01:26

Academic license - for non-commercial use only
Optimize a model with 147 rows, 109 columns and 429 nonzeros
Variable types: 1 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+05]
  Objective range  [2e-06, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 23.2404594
Presolve removed 3 rows and 0 columns
Presolve time: 0.00s
Presolved: 144 rows, 109 columns, 426 nonzeros
Variable types: 0 continuous, 109 integer (108 binary)

Root relaxation: objective 6.027859e+00, 79 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    6.02786    0   46   23.24046    6.02786  74.1%     -    0s
H    0     0                      21.8802329    6.02786  72.5%     -    0s
H    0     0                      14.4402451    6.02786  58.3%     -    0s
H    0     0                      14.4402356    6.02786  58.3%     -    0s
     0     0     cutoff    0        14.44024   14.44024  0.00%     -    0s
     0     0     cutoff    0        14.44024   14.44024  0.00%     -    0s

Cutting planes:
  MIR: 1

Explored 1 nodes (105 simplex iterations) in 0.02 seconds
Thread count was 4 (of 4 available processors)

Solution count 4: 14.4402 14.4402 21.8802 23.2405 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.444023558000e+01, best bound 1.444023558000e+01, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 15:03:18

Academic license - for non-commercial use only
Optimize a model with 147 rows, 109 columns and 429 nonzeros
Variable types: 1 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+05]
  Objective range  [2e-06, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 0.0004594
Presolve removed 108 rows and 1 columns
Presolve time: 0.00s
Presolved: 39 rows, 108 columns, 216 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)

Root relaxation: objective 2.859494e-04, 38 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    0.00029    0    4    0.00046    0.00029  37.8%     -    0s
H    0     0                       0.0002379    0.00024  0.00%     -    0s

Explored 1 nodes (38 simplex iterations) in 0.00 seconds
Thread count was 4 (of 4 available processors)

Solution count 2: 0.00023789 0.00045937 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.378900000000e-04, best bound 2.378900000000e-04, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 15:03:31

Academic license - for non-commercial use only
Optimize a model with 147 rows, 109 columns and 429 nonzeros
Variable types: 1 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+05]
  Objective range  [2e-06, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 0.0004594
Presolve removed 108 rows and 1 columns
Presolve time: 0.00s
Presolved: 39 rows, 108 columns, 216 nonzeros
Variable types: 0 continuous, 108 integer (108 binary)

Root relaxation: objective 2.859494e-04, 38 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    0.00029    0    4    0.00046    0.00029  37.8%     -    0s
H    0     0                       0.0002379    0.00024  0.00%     -    0s

Explored 1 nodes (38 simplex iterations) in 0.00 seconds
Thread count was 4 (of 4 available processors)

Solution count 2: 0.00023789 0.00045937 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.378900000000e-04, best bound 2.378900000000e-04, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 15:03:55

Academic license - for non-commercial use only
Optimize a model with 147 rows, 109 columns and 429 nonzeros
Variable types: 1 continuous, 108 integer (108 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+05]
  Objective range  [2e-06, 1e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]
Found heuristic solution: objective 23.2404594
Presolve removed 3 rows and 0 columns
Presolve time: 0.00s
Presolved: 144 rows, 109 columns, 426 nonzeros
Variable types: 0 continuous, 109 integer (108 binary)

Root relaxation: objective 6.027859e+00, 79 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    6.02786    0   46   23.24046    6.02786  74.1%     -    0s
H    0     0                      21.8802329    6.02786  72.5%     -    0s
H    0     0                      14.4402451    6.02786  58.3%     -    0s
H    0     0                      14.4402356    6.02786  58.3%     -    0s
     0     0     cutoff    0        14.44024   14.44024  0.00%     -    0s
     0     0     cutoff    0        14.44024   14.44024  0.00%     -    0s

Cutting planes:
  MIR: 1

Explored 1 nodes (105 simplex iterations) in 0.02 seconds
Thread count was 4 (of 4 available processors)

Solution count 4: 14.4402 14.4402 21.8802 23.2405 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.444023558000e+01, best bound 1.444023558000e+01, gap 0.0000%

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 15:04:29

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 15:04:50

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 15:05:02

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 15:05:47

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 15:06:08

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 15:23:45

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 15:23:54

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 15:27:28

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 15:27:36

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 15:27:45

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:03:38

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:22:44

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:22:52

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:23:23

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:24:04

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:24:23

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:25:17

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:26:31

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:26:50

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:27:09

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:29:03

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:29:47

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:30:01

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:30:38

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:31:25

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:31:35

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:33:25

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:36:19

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:37:47

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:42:13

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:42:30

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:42:57

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:43:47

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:44:45

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:45:14

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:45:52

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:51:38

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:51:55

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:55:45

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:58:08

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/08/18 18:58:20

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 09:34:00

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 09:36:52

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 09:56:58

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 09:57:01

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:11:03

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:12:07

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:12:24

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:14:04

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:15:24

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:16:18

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:18:07

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:18:25

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:19:20

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:20:14

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:29:59

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:30:20

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:30:48

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:30:56

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:32:50

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:33:12

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:33:30

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:33:42

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:37:53

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:38:29

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:38:40

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:38:56

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:39:11

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:39:27

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:39:40

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:40:10

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:40:26

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:40:34

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/10/18 10:40:42

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/15/18 00:11:49

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/15/18 00:46:30

Academic license - for non-commercial use only

Gurobi 8.1.0 (win64, Python) logging started 12/15/18 18:28:32

Academic license - for non-commercial use only
